{"version":3,"sources":["components/ToDo/Button.js","components/ToDo/taskIcon.svg","components/ToDo/Header.js","components/ToDo/bin.svg","components/ToDo/Task.js","components/ToDo/Tasks.js","components/ToDo/newTaskForm.js","components/ToDo/ToDo.js","components/Pomodoro/Components/pomodoro-final.svg","components/Pomodoro/Components/PomodoroButton.js","components/Pomodoro/Components/PomodoroHeader.js","components/Pomodoro/Components/PomodoroContent.js","components/Pomodoro/Components/Pomodoro.js","App.js","index.js"],"names":["Button","showTasks","taskVisible","className","onClick","Header","src","TaskLogo","alt","Task","task","deleteTask","toggleTaskDone","done","onDoubleClick","id","name","date","BinIcon","Tasks","tasks","map","NewTaskForm","newTask","useState","setName","setDate","setDone","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","ToDo","setAddTask","setTask","Math","floor","random","filter","PomodoroButton","PomodoroContent","Pomodoro","PomodoroHeader","App","TaskManager","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d425774.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({showTasks, taskVisible}) => {\n    return (\n        <div>\n            <button className='btn' onClick={() => showTasks()}>{taskVisible ? 'Close' : 'Open'}</button>\n        </div>\n    );\n};\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/taskIcon.f7f7234c.svg\";","import React from 'react';\nimport Button from \"./Button\";\nimport  \"./Styles/header.scss\"\nimport TaskLogo from \"./taskIcon.svg\"\n\nconst Header = ({showTasks, taskVisible}) => {\n    return (\n        <div className=\"header\">\n            <div className=\"title__wrapper\">\n                <img src={TaskLogo} alt=\"Task Manager Icon\"/>\n            <h1>Task Manger</h1>\n            </div>\n            <Button showTasks={showTasks} taskVisible={taskVisible}/>\n        </div>\n    );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/bin.5386b762.svg\";","import React from 'react';\nimport BinIcon from './bin.svg'\nimport \"./Styles/task.scss\"\n\nconst Task = ({task, deleteTask, toggleTaskDone}) => {\n    return (\n        //dodaj task active na dbl click\n        <div className={`task ${task.done ? 'task--active' : ''}`} onDoubleClick={() => toggleTaskDone(task.id)}>\n            <div className=\"task__wrapper\">\n                <h3 className=\"task__content\">{task.name}</h3>\n                <p className=\"task__date\">{task.date}</p>\n            </div>\n            <img src={BinIcon} alt=\"Remove Icon\" onClick={() => deleteTask(task.id)}/>\n        </div>\n    );\n};\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nconst Tasks = ({tasks, deleteTask, toggleTaskDone}) => {\n    return (\n        <>\n            {tasks.map((task)=> (\n            <Task key={task.id} task={task} deleteTask={deleteTask} toggleTaskDone={toggleTaskDone}/>\n            ))}\n        </>\n    );\n};\n\nexport default Tasks;","import React from 'react';\nimport \"./Styles/taskForm.scss\"\nimport {useState} from \"react\";\n\nconst NewTaskForm = ({newTask}) => {\n    const [name, setName] = useState('')\n    const [date, setDate] = useState('')\n    const [done, setDone] = useState(false)\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(!name) {\n            alert('Please name your task')\n            return\n        }\n        newTask({name,date})\n        setName('')\n        setDate('')\n        setDone(false)\n    }\n    return (\n        <form className=\"form\"  onSubmit={onSubmit}>\n            <div className=\"form__wrapper\">\n            <label htmlFor=\"Name\">Task Name</label>\n            <input className=\"form__text-input\" type=\"text\" name=\"Name\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)}/>\n            </div>\n            <div className=\"form__wrapper\">\n            <label htmlFor=\"Date\">Date</label>\n            <input className=\"form__text-input\" type=\"text\" name=\"Date\" placeholder=\"Date\" value={date} onChange={(e) => setDate(e.target.value)}/>\n            </div>\n            <input type=\"submit\" className=\"btn__input\" value=\"Add Task\"/>\n        </form>\n    );\n};\n\nexport default NewTaskForm;","import React from 'react';\nimport Header from \"./Header\";\nimport \"./Styles/toDo.scss\"\nimport Tasks from \"./Tasks\";\nimport NewTaskForm from \"./newTaskForm\";\nimport {useState} from \"react\";\n\nconst ToDo = () => {\n    const [taskVisible, setAddTask] = useState(true)\n    const [tasks, setTask] = useState([\n        {\n            id: 1,\n            name: 'Click me twice to mark as done',\n            date: 'Today',\n            done: false\n        },\n        {\n            id: 2,\n            name: 'Add New Task',\n            date: 'Today',\n            done: true\n        }\n    ])\n\n    const toggleTaskVisibility = () => {\n        setAddTask(\n            !taskVisible\n        )\n    }\n\n    const deleteTask = (id) => {\n        setTask(tasks.filter((task) => task.id !== id))\n    }\n\n    const toggleTaskDone = (id) => {\n        setTask(\n            tasks.map((task) => {\n                return task.id === id ? {...task, done: !task.done} : task\n            })\n        )\n    }\n\n    const addTask = (task) => {\n        const id = Math.floor(Math.random() * 2000 + 5)\n        const done = false\n        const newTask = {id,done,...task}\n        setTask([...tasks, newTask])\n    }\n    return (\n        <div className=\"main__container\">\n            <Header showTasks={toggleTaskVisibility} taskVisible={taskVisible} />\n            {taskVisible && <>\n            <NewTaskForm newTask={addTask}/>\n            <Tasks deleteTask={deleteTask} toggleTaskDone={toggleTaskDone} tasks={tasks} />\n            </>}\n        </div>\n    );\n};\n\nexport default ToDo;","export default __webpack_public_path__ + \"static/media/pomodoro-final.7d98e90b.svg\";","import React from 'react';\n\nconst Button = ({showTasks, taskVisible}) => {\n    return (\n        <>\n            <button className='btn' onClick={() => showTasks()}>{taskVisible ? 'Close' : 'Open'}</button>\n        </>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport  \"../../ToDo/Styles/header.scss\"\nimport TaskLogo from \"./pomodoro-final.svg\"\nimport PomodoroButton from \"./PomodoroButton\";\n\nconst Header = ({showTasks, taskVisible}) => {\n    return (\n        <div className=\"header\">\n            <div className=\"title__wrapper\">\n                <img src={TaskLogo} alt=\"Task Manager Icon\"/>\n                <h1>Pomodoro Timer</h1>\n            </div>\n            <PomodoroButton showTasks={showTasks} taskVisible={taskVisible}/>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst PomodoroContent = () => {\n    return (\n        <div>\n            <h2>Under Construction</h2>\n        </div>\n    );\n};\n\nexport default PomodoroContent;","import React, {useState} from 'react';\nimport PomodoroHeader from \"./PomodoroHeader\";\nimport PomodoroContent from \"./PomodoroContent\";\n\nconst Pomodoro = () => {\n    const [taskVisible, setAddTask] = useState(false)\n\n    const toggleTaskVisibility = () => {\n        setAddTask(\n            !taskVisible\n        )\n    }\n    return (\n        <div className='main__container'>\n        <PomodoroHeader showTasks={toggleTaskVisibility} taskVisible={taskVisible}/>\n            {taskVisible && <PomodoroContent/>}\n        </div>\n    );\n};\n\nexport default Pomodoro;","import React from 'react';\nimport ToDo from \"./components/ToDo/ToDo\";\nimport Pomodoro from \"./components/Pomodoro/Components/Pomodoro\";\n\nconst App = () => {\n    return (\n        <div>\n            <ToDo/>\n            <Pomodoro/>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\";\nimport \"./components/ToDo/Styles/main.scss\"\n\nconst TaskManager = () => {\n  return (\n    <App />\n  )\n}\n\nReactDOM.render(<TaskManager />, document.getElementById(\"root\"))\n"],"sourceRoot":""}